buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
        sonarqubeVersion = '2.5'
        atlassianVersion = "5.0.4"
        atlassianFugueVersion = "2.2.1"
        mainClass='com.custodela.machina.MachinaApplication'
    }
	repositories {
		mavenCentral()
        maven {
            url = 'https://maven.atlassian.com/content/repositories/atlassian-public'
        }
	}
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.custodela'
version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
    maven {
        url = 'https://maven.atlassian.com/content/repositories/atlassian-public'
    }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile ('commons-codec:commons-codec:1.11')
    compile ('commons-io:commons-io:2.6')
    compile ('org.json:json:20171018')
    compile ('org.springframework.boot:spring-boot-starter-web-services')
    compile ('org.springframework.boot:spring-boot-starter-mail')
    compile ('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile ("com.atlassian.fugue:fugue:${atlassianFugueVersion}")
    compile ("com.atlassian.jira:jira-rest-java-client-core:${atlassianVersion}")
    compile ("com.atlassian.jira:jira-rest-java-client-api:${atlassianVersion}")
    compile ("org.thymeleaf:thymeleaf:3.0.9.RELEASE")
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.4.0-b180830.0438'
    compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    compile group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.4.0'
    compileOnly ('org.springframework.boot:spring-boot-configuration-processor')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compileJava.dependsOn(processResources)
}

springBoot {
    mainClassName = "${mainClass}"
}

configurations {
    archivesBaseName = 'cx-flow-cmd-11'
}

/*configurations {
    runtime.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude group: 'org.apache.tomcat'
}*/
