image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

stages:
  - build
  - package
  - deploy-stg

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

gradle-build:
  stage: build
  image: gradle:alpine
  script:
    - gradle --build-cache assemble
    - gradle -b build-11.gradle --build-cache assemble
    #Move the CMD SpringBoot main class into the source tree and build
    - cp cmd/MachinaApplication.java src/main/java/com/custodela/machina/
    - gradle -b build-cmd.gradle --build-cache assemble
    - gradle -b build-cmd-11.gradle --build-cache assemble

  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/*.jar

#package-docker:
#  stage: package
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#    - docker build -t registry.gitlab.com/custodela/machina .
#    - docker build -t registry.gitlab.com/custodela/machina:web .
#    - docker build -f Dockerfile-11 -t registry.gitlab.com/custodela/machina:web-11 .
#    - docker build -f Dockerfile-cmd -t registry.gitlab.com/custodela/machina:cmd .
#    - docker build -f Dockerfile-cmd-11 -t registry.gitlab.com/custodela/machina:cmd-11 .
#    - docker push registry.gitlab.com/custodela/machina
#  dependencies:
#    - gradle-build
#  only:
#    - master

package-docker-hub:
  stage: package
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE} .
    - docker build -t ${CI_REGISTRY_IMAGE}:web .
    - docker build -f Dockerfile-11 -t ${CI_REGISTRY_IMAGE}:web-11 .
    - docker build -f Dockerfile-cmd -t ${CI_REGISTRY_IMAGE}:cmd .
    - docker build -f Dockerfile-cmd-11 -t ${CI_REGISTRY_IMAGE}:cmd-11 .
    - docker push ${CI_REGISTRY_IMAGE}
  dependencies:
    - gradle-build
  only:
    - master

#package-heroku:
#  stage: package
#  script:
#    - docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
#    #- docker build -t registry.heroku.com/custodela-machina/web .
#    - docker build -f Dockerfile-11 -t registry.heroku.com/custodela-machina/web .
#    - docker push registry.heroku.com/custodela-machina/web
#  dependencies:
#    - gradle-build
#  only:
#    - master

#deploy-heroku-stg:
#  stage: deploy-stg
#  image: ubuntu
#  script:
#    - apt-get update
#    - apt-get install curl gnupg -y
#    - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
#   - heroku container:push web --app custodela-machina
#xxxx    - heroku container:release web --app custodela-machina
#  only:
#  - master
