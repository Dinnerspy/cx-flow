---------------------------------------------------------------------
Release 1.2
---------------------------------------------------------------------
#FEATURES
* GitLab and GitHub Issues support has been added
    Custom bug tracker "GitLab" and "GitHub"
* Pull Request blocking support added for GitHub when running in WebHook mode - scans must finish in Checkmarx before merge can take place
* Merge Request blocking support added for GitLab when running in WebHook mode - scans must finish in Checkmarx before merge can take place
---------------------------------------------------------------------
Release 1.1
---------------------------------------------------------------------
#FEATURES
* Introduce support for Custom Bug Tracker Implementations. You must create a Service bean and implement the com.custodela.machina.custom.IssueTracker interface
    void init(ScanRequest request, ScanResults results) throws MachinaException;
    void complete(ScanRequest request, ScanResults results) throws MachinaException;
    String getFalsePositiveLabel() throws MachinaException;
    List<Issue> getIssues(ScanRequest request) throws MachinaException;
    Issue createIssue(ScanResults.XIssue resultIssue, ScanRequest request) throws MachinaException;
    void closeIssue(Issue issue, ScanRequest request) throws MachinaException;
    Issue updateIssue(Issue issue, ScanResults.XIssue resultIssue, ScanRequest request) throws MachinaException;
    String getIssueKey(Issue issue, ScanRequest request);
    String getXIssueKey(ScanResults.XIssue issue, ScanRequest request);
    boolean isIssueClosed(Issue issue);
    boolean isIssueOpened(Issue issue);
* Introduce command line feature to trigger scans (zip) and provide Github Pull Request Feedback

#NOTES:
Must include entries for custom bean implementations under the machina yaml block like the following
machina:
  bug-tracker: CxXml
  bug-tracker-impl:
    - Xml
    - CxXml
    - Json
    - GitLab

bug-tracker-impl are all the available beans.  The beans must match the exact Spring Service bean name exactly.  For example, the following creates a
bean named GitLab, which you can see is listed in bug-tracker-impl above:
...
@Service("GitLab")
public class GitLabIssueTracker implements IssueTracker {
...
---------------------------------------------------------------------
Release 1.0.2
---------------------------------------------------------------------
#FIXES
* Fix to remove spaces and special characters in batch mode team/project name that is mapped to label in JIRA, which spaces are not supported
---------------------------------------------------------------------
Release 1.0.1
---------------------------------------------------------------------
#FEATURES
* Incremental scan support

#FIXES
* Ensure there is not an existing active scan in the queue before creating a new scan
* BitBucket Line URLs are were different between BB Cloud and Server - this is fixed with the exception of BB Cloud references to a branch with forward slash '/'


#NOTES
* incremental scan support has 2 elements.
    Number of scans since last previous full scan threshold - default 5
    Number of days since previous full scan threshold - default 7
* BitBucket Cloud line URL with branches that have forward slash ('/') do not work - yet.

---------------------------------------------------------------------
Release 1.0
---------------------------------------------------------------------
Initial Release